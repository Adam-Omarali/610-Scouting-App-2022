import { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from "@mui/material";
import state from "../static/state";
import config from '../config.json'
const { GoogleSpreadsheet } = require('google-spreadsheet');

async function spreadsheet(){
    const doc = new GoogleSpreadsheet(config.spreadsheet_id);
    await doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: "sheets-crud@scouting-app-347202.iam.gserviceaccount.com",
        private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCm+WmUXWDX2CTe\nTDvjL0JCHi26KthXJIfEs/mR6aSUUBOpEDgi19TvStyH8Mjt28PCdGFYR6EjSP4e\nPY1EEJO2MiOC6QH/TIDSqQYWp97nCNUgoX+jzJuFXQ4tvWcu1kTbTte6oirfBO1R\n4+cM7aA6JqrBFpHoqK6Ki6Xc4+O0jXoJIAMWpzkmSN3rTJaz7FWP/0QKeSZLODil\nxU+Z8VVStOV8bmY4w7oaycV3dasy0S1qO8Z8zb6VRVRSmOz/ZVNOF//fb/RXdLar\nR8QXUXMaFvhDFHXZxxQ8sja1RgSiqWOFHBewAV8G9Yfj8GC62Z8eHQaDTXb+71zJ\nXY1PDggfAgMBAAECggEAE8gMQjehKlZ2NmB5XywGoVb6RjTJkOKy3lK6GEIXWDt3\nu3mV757P9bzR4p2xQuixyPRJDLszs76eiHj0pvcrIL8mO4ic+XYX9EfHq7XImmi5\nTdaEN3odL1ARHB8fvcnvD2edoYPmff8TRIvc9XL4yVrdCOdtHXn6b6R6tRrJ1mZp\naOqA+t8VYxF8tIGt/ay1JuLvFVQaSd5M6By/HHz30rC1kWBJmWHaAN7xkGQRcdXi\nhlLL9t597nQ+cTTIK0Jpc7mmujSEWVgkSqOV8kU/LAxmYhda5lp8RyIyaelwTQGl\nQco+8JIabLPTNQCezcH/An8f+RaKlk8STw21qjxgjQKBgQDUUrHXb5XWlgrSsKS/\n9idJCkFyFzxl1jnfYuPWqcll1wtwn08eGTJWZPc2os45RZYmfao6bAvcFquUUGIM\n2M3ehAteBUgFD0j8BMW4t+m5nZqU6TXgMC5Am1CtGXxAVhXc5xZXw2quNVDKq0Yd\nulHVvsFQYn2yeDJ5b1vbEtdCZQKBgQDJUpJxcSJ3i4xJ0jcUiRzGz6D+G4MPiSiS\nO/ZrMpHofkbSwnl/2Irak/INxz25zDyac0xHrRQ47UghnOUhk6kIx40SF/LMbfqf\ns/sooQpglB0KdXhcWxVeWFlQoR40329t6CpV5dbFm9HK+IpOqWRdqgvdgv2e1VJD\niEE1pZi2MwKBgQCrmKHOgYpRwTXCDa04z1H0v+sgsBLKIxbmqV+GD/aK7f965+Xj\nZ229USBS8cVFmC2/sfQv/z6eg1vsJAL6awYG/iTJue7419+efqTlow2sS+mwy8IV\nDBt1b5EGNQCsZmaI/+KYz4CahtBi24VxZTHaU66crtzzrhzs88kDBvkd2QKBgBW8\nmJsu/+2wX4FI9TF+bGD64gMNrWTsBjljyANi/mX/3F29KakoFDXta2EZdgythI2Y\njU/f3CMZW4RlkEfDzahpA05Ez65K4ZiEskV8vcYXt9r9O/Wcz/3TxDD0dHJ4/Wr8\nejW0DzBe1pP3qdc8at3CEm3kSsXvemZYO9IzAv4JAoGBAIa+ra3EkVrhIClQo//z\ny5Bl0PrpO+WCKVibXbFBKtd5BtRroqK91LlX1GRM14kvAfuGgUuxqbgZUtui8lLC\nQ501siIt+9BDExdAiDMQDjitJCs7VC/2Th9UCVsSLaeWDLhs+IC21dvV1HCte+2E\n/x5X/EB3il0OnVA5XZdDQASi\n-----END PRIVATE KEY-----\n",
    });
    await doc.loadInfo();
    console.log(doc.title)
}

function Results(props){
    spreadsheet();
    let team = state.general.teamNumber
    let avgCycleTime = 0;
    for (let index = 0; index < state.teleop.cycleTimes.length; index++) {
        avgCycleTime += state.teleop.cycleTimes[index];
    }
    avgCycleTime /= (state.teleop.cycleTimes.length + 1)
    let teleop = (state.teleop.madeShots - state.teleop.lowerGoalBalls) * 2 + state.teleop.lowerGoalBalls
    let auto = state.auto.upperScored * 4 + state.auto.lowerScored * 2 + (state.auto.offAutoLine ? 4 : 0)
    let climb = state.climb.successful ? state.climb.attemptedPoints : 0
    let total = teleop + auto + climb
    let shotAccuracy = state.teleop.madeShots / (state.teleop.madeShots + state.teleop.missedShots)
    let defenseTime = state.teleop.defenseTime
    let cycles = (state.teleop.missedShots + state.teleop.madeShots) / 2

    return (
        <div className="App-header">
            <TableContainer>
                <Table sx={{ minWidth: 650 }} aria-label="simple table">
                    <TableHead>
                        <TableRow>
                            <TableCell>Team Number</TableCell>
                            <TableCell align="center">Avg Cycle Time</TableCell>
                            <TableCell align="center">Teleop Points</TableCell>
                            <TableCell align="center">Auto Points</TableCell>
                            <TableCell align="center">Climb Points</TableCell>
                            <TableCell align="center">Total Points</TableCell>
                            <TableCell alight="center">Shot Accuracy</TableCell>
                            <TableCell alight="center">Defense Time</TableCell>
                            <TableCell alight="center">Cycles</TableCell>
                        </TableRow>
                    </TableHead>
                    <TableBody>
                        <TableRow>
                            <TableCell>{team}</TableCell>
                            <TableCell align="center">{avgCycleTime.toFixed(3)}</TableCell>
                            <TableCell align="center">{teleop}</TableCell>
                            <TableCell align="center">{auto}</TableCell>
                            <TableCell align="center">{climb}</TableCell>
                            <TableCell align="center">{total}</TableCell>
                            <TableCell align="center">{(shotAccuracy*100).toFixed(3)}</TableCell>
                            <TableCell align="center">{defenseTime}</TableCell>
                            <TableCell align="center">{cycles}</TableCell>
                        </TableRow>
                    </TableBody>
                </Table>
            </TableContainer>
            <div className="padding-top">
                <TextField placeholder="Notes">Notes</TextField>
            </div>
            <div className="padding-top">
                <Button variant="contained" onClick={() => props.setPage("home")}>Back Home</Button>
            </div>
        </div>
    )
}

export default Results;